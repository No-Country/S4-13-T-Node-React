import type { NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';

import Layout from '../components/layout/Layout';
import DeleteComment from '../components/posts/comments/DeleteComment';
import PostsContainer from '../components/posts/PostsContainer';
import { useAxios } from '../hooks/useAxios';
import { AxiosGetPost, IPost } from '../interfaces';
import { handleModal } from '../redux/slice/modalSlice';
import { getPosts, requestPosts } from '../redux/slice/postsSlice';
import { UserDataState } from '../redux/slice/userDataSlice';
import { RootState } from '../redux/store';

const Home: NextPage = () => {
  const { data } = useSelector<RootState, UserDataState>(state => state.userDataReducer);
  const router = useRouter();
  const dispatch = useDispatch();

  const handleUploadMeme = () => {
    if (!data?.access_token) {
      dispatch(handleModal(true));
    } else {
      router.push('/upload');
    }
  };

  const api = useAxios();

  const [postsList, setPostsList] = useState<IPost[]>();
  const [error, setError] = useState<string | null>(null);

  const [pageNumber, setPageNumber] = useState<number>(1);
  const [wordSearch, setWordSearch] = useState<string>('');
  const [sizeList, setSizeList] = useState<number>(20);
  const [isLoading, setIsLoading] = useState<boolean>(true);

  useEffect(() => {
    dispatch(requestPosts());
    api
      .get(`/post?page=${pageNumber}`)
      .then(({ data }: AxiosGetPost) => {
        const { posts, actual_page, last_page, size, total } = data.data;
        setPostsList(posts);
        dispatch(getPosts(posts));
        setIsLoading(false);
      })
      .catch(err => {
        setError(err);
        setIsLoading(false);
      });
  }, [pageNumber]);

  return (
    <>
      <Head>
        <title>Lo Nuevo - Memex</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
        <div className="flex flex-col min-w-screen flex-1 w-full sm:w-[512px] lg:w-[1024px] mt-[56px] justify-center ">
          {!isLoading && (
            <div className="flex w-full justify-around items-center mt-4 max-w-[344px] mx-auto">
              <h1 className="font-orelega text-[24px] leading-[26px]">Lo nuevo</h1>
              <button
                className="font-roboto font-bold text-primary text-base leading-[19px] border-2 border-primary rounded-lg py-2 px-4 active:text-secondary active:border-secondary"
                onClick={handleUploadMeme}
              >
                Subir meme
              </button>
            </div>
          )}
          <div className="px-2 mx-auto">
            <PostsContainer posts={postsList} error={error} isLoading={isLoading} />
          </div>
        </div>
      </Layout>
    </>
  );
};

export default Home;
